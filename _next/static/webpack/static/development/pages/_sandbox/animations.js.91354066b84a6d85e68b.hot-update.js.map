{"version":3,"file":"static/webpack/static/development/pages/_sandbox/animations.js.91354066b84a6d85e68b.hot-update.js","sources":["webpack:///./pages/_sandbox/animations.jsx"],"sourcesContent":["import React, { useContext, useCallback } from 'react';\n\nimport { useTheme, Typography, Grid } from '@material-ui/core';\nimport _ from 'lodash';\n\nimport { useSpring, animated as a, interpolate } from 'react-spring';\n\nimport { wrapPage } from '../../imports/wrap-page';\n\nexport default wrapPage(() => {\n  // инициализировать одно spring поведение\n  const [{ xys, s, spx }, setSpring] = useSpring(() => ({ s: 0, spx: 0, xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }));\n\n  // создать реакцию на скролл (затем передать в div)\n  const onScroll = useCallback(e => setSpring({ s: e.target.scrollTop / e.target.scrollHeight, spx: e.target.scrollTop }), []);\n\n  // создать поведения для разных элементов и передать их в style transform\n  // s от 0 до 1 прокрученность от начала до конца, xys[0] положение мыши по x, xys[1] по y\n  const item1 = interpolate([s, xys], (s, xys) => `scale(${s}) perspective(600px) rotateX(${xys[0]}deg) rotateY(${xys[1]}deg)`);\n  const item2 = interpolate([s, xys], (s, xys) => `rotate(${s * 100}deg)`);\n  const item3 = interpolate([s, xys], (s, xys) => `translateY(${-(s * 2000) + 600}px)`);\n  const item4 = interpolate([s, xys], (s, xys) => `translateY(${-(s * 300) + 0}px)`);\n  const item5 = interpolate([s, xys], (s, xys) => `scaleX(${s * 2})`);\n  const item6 = interpolate([s, xys], (s, xys) => `scaleY(${s})`);\n  const item7 = interpolate([spx, xys], (spx, xys) => `scaleY(${spx})`);\n\n  return (\n    <>\n      <div\n        onScroll={onScroll}\n        onMouseMove={({ clientX: x, clientY: y }) => setSpring({ xys: [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1] })}\n        style={{\n          position: 'fixed',\n          left: 0, top: 0,\n          width: '100%',\n          height: '100%',\n          overflow: 'scroll',\n        }}\n      >\n        <Grid container justify=\"center\">\n          <Grid item xs={4}>\n            <a.div style={{ transform: item2, height: 300, background: 'red' }}></a.div>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"flex-start\">\n          <Grid item xs={4}>\n            <a.div style={{ transform: item3, height: 300, background: 'blue' }}></a.div>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"flex-end\">\n          <Grid item xs={4}>\n            <a.div style={{ transform: item4, height: 300, background: 'green' }}></a.div>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\">\n          <Grid item xs={4} style={{ overflow: 'hidden' }}>\n            <a.div style={{ transform: item5, transformOrigin: 'center left', height: 100, background: 'yellow' }}></a.div>\n          </Grid>\n        </Grid>\n        <div\n          style={{\n            height: 1000,\n          }}\n        ></div>\n        <a.div\n          style={{\n            transform: item1,\n            position: 'fixed',\n            top: 'calc(50% - 150px)',\n            left: 'calc(50% - 150px)',\n            width: 300,\n            height: 300,\n            background: 'gray',\n          }}\n        ></a.div>\n        <a.div\n          style={{\n            transform: item6,\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: 10,\n            height: '100%',\n            background: 'brown',\n          }}\n        ></a.div>\n        <a.div\n          style={{\n            transform: item7,\n            position: 'fixed',\n            top: 0,\n            left: 10,\n            width: 10,\n            height: '100%',\n            background: 'pink',\n          }}\n        ></a.div>\n      </div>\n    </>\n  );\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;A","sourceRoot":""}